---
import { QRCode } from 'astro-pure/advanced';
import { Icon } from 'astro-pure/user';
import { cn } from 'astro-pure/utils';
import config from '@/site-config';

interface Props {
	title: string;
	class?: {
		wrapper?: string;
	};
}

const { title, class: className } = Astro.props;

const newLine = '%0A';

const shares = {
	linkedin: {
		link: `https://www.linkedin.com/sharing/share-offsite/?url=${Astro.url}`,
	},
	x: {
		link: `https://x.com/intent/tweet?text=${title}${newLine}${newLine}&url=${Astro.url}${newLine}&via=MR_Mostafa70`,
	},
	telegram: {
		link: `https://t.me/share/url?url=${Astro.url}${newLine}&text=${title}`,
	},
} as const;
---

<div class={cn('relative', className?.wrapper)}>
	<div class="flex flex-row gap-3">
		<button id="copy-link" class="group rounded-full bg-muted p-1 text-muted-foreground transition-colors hover:text-primary sm:p-1.5">
			<Icon class="size-5" name="link" />
		</button>

		<button id="get-qrcode" class="group rounded-full bg-muted p-1 text-muted-foreground transition-colors hover:text-primary sm:p-1.5">
			<Icon class="size-5" name="qrcode" />
		</button>

		{
			config.content.share?.map((share) => (
				<a
					href={shares[share].link}
					target="_blank"
					id={`share-${share}`}
					class="group rounded-full bg-muted p-1 text-muted-foreground transition-colors hover:text-primary sm:p-1.5"
				>
					<Icon class="size-5" name={share} />
				</a>
			))
		}
	</div>

	<QRCode
		aria-expanded="false"
		class="absolute z-10 -mt-2 box-content max-h-0 max-w-44 overflow-hidden rounded-xl border bg-muted p-4 opacity-0 transition-all duration-300 ease-in-out aria-expanded:max-h-44 aria-expanded:translate-y-4 aria-expanded:opacity-100"
	/>
</div>

<script>
	// Copy link
	const copyLink = document.getElementById('copy-link');
	copyLink?.addEventListener('click', () => {
		navigator.clipboard.writeText(window.location.href);
		// Show toast
		document.dispatchEvent(new CustomEvent('toast', { detail: { message: 'لینک کپی شد!' } }));
	});

	// QRCode
	const getQRCode = document.getElementById('get-qrcode');
	const qrcodeContainer = document.getElementById('qrcode-container');

	if (!qrcodeContainer) throw new Error('qrcode container not found');
	getQRCode?.addEventListener('click', () => {
		if (qrcodeContainer.ariaExpanded === 'true') {
			qrcodeContainer.ariaExpanded = 'false';
		} else {
			qrcodeContainer.ariaExpanded = 'true';
		}
	});
</script>
